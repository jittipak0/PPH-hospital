name: web-ci
on: [push, pull_request]

jobs:
  frontend:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: frontend } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with: { name: frontend-dist, path: frontend/dist }

  backend-php:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: backend } }
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, curl, zip, pdo_sqlite, sqlite3, bcmath, intl
          coverage: none

      - name: Install Composer deps
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Prepare env (dev .env + testing .env.testing)
        run: |
          cp .env.example .env
          php artisan key:generate
          mkdir -p database storage bootstrap/cache
          chmod -R 777 storage bootstrap/cache
          php artisan config:clear

          # ใช้ SQLite in-memory สำหรับ test
          cat > .env.testing <<'ENV'
APP_ENV=testing
APP_KEY=base64:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
DB_CONNECTION=sqlite
DB_DATABASE=:memory:
ENV

      - name: Run migrations (dev sqlite file)
        run: |
          mkdir -p database && touch database/database.sqlite
          php -r "file_put_contents('.env', preg_replace('/^DB_CONNECTION=.*/m','DB_CONNECTION=sqlite', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('#^DB_DATABASE=.*#m','DB_DATABASE=database/database.sqlite', file_get_contents('.env')));"
          php artisan migrate --force

      - name: Run tests
        run: php artisan test -q
