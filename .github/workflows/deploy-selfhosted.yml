name: deploy-selfhosted
on: { push: { branches: [ main ] } }

jobs:
  build-and-deploy:
    runs-on: self-hosted
    defaults: { run: { shell: bash } }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      # ---------- Frontend ----------
      - name: Build frontend
        working-directory: frontend
        run: |
          set -euxo pipefail
          echo "VITE_API_BASE_URL=http://127.0.0.1:8080" > .env.production
          npm ci
          npm run build
          test -f dist/index.html
          chmod -R u+rwX,go+rX dist

      - name: Deploy frontend
        run: |
          set -euxo pipefail
          mkdir -p /var/www/hospital/frontend
          rm -rf /var/www/hospital/frontend/*
          tar -C frontend/dist -cf - . | tar -C /var/www/hospital/frontend -xf -
          find /var/www/hospital/frontend -type d -exec chmod 755 {} +
          find /var/www/hospital/frontend -type f -exec chmod 644 {} +

      # ---------- Backend ----------
      - name: Prepare backend release dir
        id: prep
        run: |
          set -euxo pipefail
          TS=$(date +%s); REL="/var/www/hospital/releases/backend-${TS}"
          mkdir -p "$REL"; echo "REL=$REL" >>"$GITHUB_OUTPUT"

      - name: Copy backend source to release (tar pipe)
        run: |
          set -euxo pipefail
          tar -C backend \
              --exclude .git --exclude node_modules --exclude vendor \
              -cf - . | tar -C "${{ steps.prep.outputs.REL }}" -xf -

      - name: Link shared storage/cache and .env
        run: |
          set -euxo pipefail
          cd "${{ steps.prep.outputs.REL }}"
          cp /var/www/hospital/shared/.env .env
          rm -rf storage bootstrap/cache
          ln -s /var/www/hospital/shared/storage storage
          ln -s /var/www/hospital/shared/bootstrap/cache bootstrap/cache
          if grep -q '^DB_CONNECTION=sqlite' .env; then
            DB_PATH="$(grep '^DB_DATABASE=' .env | cut -d= -f2-)"
            [ -n "$DB_PATH" ] && touch "$DB_PATH"
          fi
          mkdir -p storage/framework/{cache,views}

      - name: Composer install (prod) + migrate + caches
        run: |
          set -euxo pipefail
          cd "${{ steps.prep.outputs.REL }}"
          composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
          php artisan key:generate --force || true
          php artisan migrate --force
          php artisan config:cache && php artisan route:cache
          # cache views เฉพาะเมื่อมีไฟล์ .blade.php
          if find resources/views -type f -name '*.blade.php' 2>/dev/null | grep -q .; then
            php artisan view:cache
          else
            echo "No Blade views, skip view:cache"
            php artisan view:clear || true
          fi
    


      - name: Switch current backend symlink & reload nginx
        run: |
          set -euxo pipefail
          ln -sfn "${{ steps.prep.outputs.REL }}" /var/www/hospital/backend
          chown -hR deploy:deploy /var/www/hospital
          (sudo restorecon -Rv /var/www/hospital || true)
          sudo systemctl reload nginx || true
